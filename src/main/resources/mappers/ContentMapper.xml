<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zick.dao.ContentMapper" >
  <resultMap id="BaseResultMap" type="com.zick.model.Content" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="support" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="degrade" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zick.model.Content" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="support" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="degrade" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, support, degrade, title
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zhihu_content
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zhihu_content
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zick.model.Content" >
    insert into zhihu_content (id, user_id, support, 
      degrade, title, content
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{support,jdbcType=INTEGER}, 
      #{degrade,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zick.model.Content" >
    insert into zhihu_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="support != null" >
        support,
      </if>
      <if test="degrade != null" >
        degrade,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="support != null" >
        #{support,jdbcType=INTEGER},
      </if>
      <if test="degrade != null" >
        #{degrade,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zick.model.Content" >
    update zhihu_content
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="support != null" >
        support = #{support,jdbcType=INTEGER},
      </if>
      <if test="degrade != null" >
        degrade = #{degrade,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zick.model.Content" >
    update zhihu_content
    set user_id = #{userId,jdbcType=VARCHAR},
      support = #{support,jdbcType=INTEGER},
      degrade = #{degrade,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zick.model.Content" >
    update zhihu_content
    set user_id = #{userId,jdbcType=VARCHAR},
      support = #{support,jdbcType=INTEGER},
      degrade = #{degrade,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>